[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://lj2vugky2ax6"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_1gtls"]
parameter_name = "albedo"
texture_filter = 1
texture_repeat = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_2fo55"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jqdgl"]
input_name = "uv"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D albedo : filter_nearest, repeat_enable;



void fragment() {
// Input:4
	vec2 n_out4p0 = UV;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(albedo, n_out4p0);
	float n_out3p4 = n_out3p0.a;


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);
	ALPHA = n_out3p4;


}
"
graph_offset = Vector2(-906.133, -239.685)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_1gtls")
nodes/fragment/2/position = Vector2(-1100, 300)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_2fo55")
nodes/fragment/3/position = Vector2(-280, 160)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_jqdgl")
nodes/fragment/4/position = Vector2(-1080, 160)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 4, 0, 3, 0, 3, 0, 0, 0, 3, 4, 0, 1)
